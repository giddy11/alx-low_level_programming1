#include <stdarg.h>
#include <unistd.h>
#include <stdlib.h>
#include <limits.h>

int my_putchar(char c)
{
    return write(1, &c, 1);
}

int put_string(char *str)
{
    int i, r_value;
    if(str)
    {
        for (i = 0; i < str[i] != 0; i++, r_value++)
        {
            my_putchar(str[i]);
        }
    }
    // my_putchar('\n');
    

    return r_value;
}

int print_int(int num)
{
    int n;

    /* Handle negative numbers*/
    if (num < 0)
    {
        my_putchar('-');
        num = -num;
    }

    if (num == 0)
        return 0;

    n = num / 10;

    int count = print_int(n);
    // count += my_putchar(num % 10 + '0');
    return count +  my_putchar(num % 10 + '0');


    // return count;
}

int _printf(const char *format, ...)
{
    unsigned i, r_value = 0;
    va_list my_list;
    va_start(my_list, format);

    for (i = 0; i < format[i] != 0; i++)
    {
        if (format[i] != '%')
        {
            my_putchar(format[i]);
        }
        else if (format[i+1] == 'c')
        {
            char c = va_arg(my_list, int);
            my_putchar(c);
            i++;
        }
        else if (format[i+1] == 's')
        {
            // put_string(va_arg(my_list, char*));
            int r_val = put_string(va_arg(my_list, char*));
            i++;
            r_value += r_val;
            // r_value += (r_val - 1);
        }
        else if (format[i+1] == '%')
        {
            my_putchar('%'); 
            i++;
        }
        else if ((format[i+1] == 'd') || (format[i+1] == 'i'))
        {
            print_int(va_arg(my_list, int));
            // print_int1(va_arg(my_list, int));
            i++;
        }
        
        r_value++;
    }

    return r_value;
}

int main(void)
{
    int len;
    int len2;
    unsigned int ui;
    void *addr;

    len = _printf("Let's try to printf a simple sentence.\n");
    len2 = printf("Let's try to printf a simple sentence.\n");

    return (0);
}